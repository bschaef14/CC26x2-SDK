<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys" kind="struct" language="C++" prot="public">
    <compoundname>ECJPAKE_OperationRoundOneGenerateKeys</compoundname>
    <includes refid="_e_c_j_p_a_k_e_8h" local="no">ECJPAKE.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1ab114792910e0ea158a8ac395510ccc53" prot="public" static="no" mutable="no">
        <type>const <ref refid="struct_e_c_c_params___curve_params" kindref="compound">ECCParams_CurveParams</ref> *</type>
        <definition>const ECCParams_CurveParams* ECJPAKE_OperationRoundOneGenerateKeys::curve</definition>
        <argsstring></argsstring>
        <name>curve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the elliptic curve parameters used in the operation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="821" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="821" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a4daf3b33de1e9d3de08869918f9d215e" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPrivateKey1</definition>
        <argsstring></argsstring>
        <name>myPrivateKey1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key. Must be of the same length as other params of the curve used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="824" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a864d14da964cd8a7a14ca0055700e58c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPrivateKey2</definition>
        <argsstring></argsstring>
        <name>myPrivateKey2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key. Must be of the same length as other params of the curve used. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="828" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="828" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a02b1264ab2a9d23a7ae54cdaf39494c3" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPublicKey1</definition>
        <argsstring></argsstring>
        <name>myPublicKey1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the blank public key of <computeroutput>myPrivateKey1</computeroutput>. The keying material will be written to the buffer specified in the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="832" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="832" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a8aa339a06a25586addbcb5d408c9ed49" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPublicKey2</definition>
        <argsstring></argsstring>
        <name>myPublicKey2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the blank public key of <computeroutput>myPrivateKey2</computeroutput>. The keying material will be written to the buffer specified in the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="837" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="837" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a998769ead4ed78a9fc7ebd1986a11753" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPrivateV1</definition>
        <argsstring></argsstring>
        <name>myPrivateV1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key used in the first Schnorr ZKP. Must be of the same length as other params of the curve used. The <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> and keying material may be deleted or go out of scope after generating the ZKP. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="842" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="842" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a19b4f5da483abcf28c03cf6baae924ff" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPrivateV2</definition>
        <argsstring></argsstring>
        <name>myPrivateV2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to a private ECC key used in the second Schnorr ZKP. Must be of the same length as other params of the curve used. The <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> and keying material may be deleted or go out of scope after generating the ZKP. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="849" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="849" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a4be523ebfc383f0c41e61f4fc3ea149b" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPublicV1</definition>
        <argsstring></argsstring>
        <name>myPublicV1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the blank public key of <computeroutput>myPrivateV1</computeroutput>. The keying material will be written to the buffer specified in the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. The <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> and keying material may be deleted or go out of scope after generating the hash and sending <computeroutput>myPublicV2</computeroutput> to the other party with the rest of the parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="856" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="856" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a8c021725d9774a0f6153ee30b424485c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> *</type>
        <definition>CryptoKey* ECJPAKE_OperationRoundOneGenerateKeys::myPublicV2</definition>
        <argsstring></argsstring>
        <name>myPublicV2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to the blank public key of <computeroutput>myPrivateV2</computeroutput>. The keying material will be written to the buffer specified in the <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref>. The <ref refid="struct_crypto_key" kindref="compound">CryptoKey</ref> and keying material may be deleted or go out of scope after generating the hash and sending <computeroutput>myPublicV2</computeroutput> to the other party with the rest of the parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="865" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="865" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Struct containing the parameters required to generate the first round of keys. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="394">
        <label>ECJPAKE_OperationRoundOneGenerateKeys</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys"/>
        <childnode refid="395" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="397" relation="usage">
          <edgelabel>myPublicKey1</edgelabel>
          <edgelabel>myPublicKey2</edgelabel>
          <edgelabel>myPrivateKey1</edgelabel>
          <edgelabel>myPrivateKey2</edgelabel>
          <edgelabel>myPublicV1</edgelabel>
          <edgelabel>myPublicV2</edgelabel>
          <edgelabel>myPrivateV1</edgelabel>
          <edgelabel>myPrivateV2</edgelabel>
        </childnode>
      </node>
      <node id="397">
        <label>CryptoKey</label>
        <link refid="struct_crypto_key"/>
        <childnode refid="398" relation="usage">
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="399" relation="usage">
          <edgelabel>keyStore</edgelabel>
        </childnode>
        <childnode refid="400" relation="usage">
          <edgelabel>keyBlob</edgelabel>
        </childnode>
      </node>
      <node id="395">
        <label>ECCParams_CurveParams</label>
        <link refid="struct_e_c_c_params___curve_params"/>
        <childnode refid="396" relation="usage">
          <edgelabel>g</edgelabel>
          <edgelabel>precomputed</edgelabel>
          <edgelabel>generator</edgelabel>
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="396">
        <label>ECCParams_ECCPoint</label>
        <link refid="struct_e_c_c_params___e_c_c_point"/>
      </node>
      <node id="398">
        <label>CryptoKey_Plaintext</label>
        <link refid="struct_crypto_key___plaintext"/>
      </node>
      <node id="400">
        <label>CryptoKey_KeyBlob</label>
        <link refid="struct_crypto_key___key_blob"/>
      </node>
      <node id="399">
        <label>CryptoKey_KeyStore</label>
        <link refid="struct_crypto_key___key_store"/>
      </node>
    </collaborationgraph>
    <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="820" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="820" bodyend="874"/>
    <listofallmembers>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1ab114792910e0ea158a8ac395510ccc53" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>curve</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a4daf3b33de1e9d3de08869918f9d215e" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPrivateKey1</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a864d14da964cd8a7a14ca0055700e58c" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPrivateKey2</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a998769ead4ed78a9fc7ebd1986a11753" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPrivateV1</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a19b4f5da483abcf28c03cf6baae924ff" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPrivateV2</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a02b1264ab2a9d23a7ae54cdaf39494c3" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPublicKey1</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a8aa339a06a25586addbcb5d408c9ed49" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPublicKey2</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a4be523ebfc383f0c41e61f4fc3ea149b" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPublicV1</name></member>
      <member refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys_1a8c021725d9774a0f6153ee30b424485c" prot="public" virt="non-virtual"><scope>ECJPAKE_OperationRoundOneGenerateKeys</scope><name>myPublicV2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
