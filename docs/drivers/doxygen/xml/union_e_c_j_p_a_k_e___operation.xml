<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="union_e_c_j_p_a_k_e___operation" kind="union" language="C++" prot="public">
    <compoundname>ECJPAKE_Operation</compoundname>
    <includes refid="_e_c_j_p_a_k_e_8h" local="no">ECJPAKE.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="union_e_c_j_p_a_k_e___operation_1a6c46e845743811aae2037f8dd6876316" prot="public" static="no" mutable="no">
        <type><ref refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys" kindref="compound">ECJPAKE_OperationRoundOneGenerateKeys</ref> *</type>
        <definition>ECJPAKE_OperationRoundOneGenerateKeys* ECJPAKE_Operation::generateRoundOneKeys</definition>
        <argsstring></argsstring>
        <name>generateRoundOneKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an <ref refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys" kindref="compound">ECJPAKE_OperationRoundOneGenerateKeys</ref> struct </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1037" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1037" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="union_e_c_j_p_a_k_e___operation_1ac8503245dc8cf2a5987e2a73ee6550e6" prot="public" static="no" mutable="no">
        <type><ref refid="struct_e_c_j_p_a_k_e___operation_generate_z_k_p" kindref="compound">ECJPAKE_OperationGenerateZKP</ref> *</type>
        <definition>ECJPAKE_OperationGenerateZKP* ECJPAKE_Operation::generateZKP</definition>
        <argsstring></argsstring>
        <name>generateZKP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an <ref refid="struct_e_c_j_p_a_k_e___operation_generate_z_k_p" kindref="compound">ECJPAKE_OperationGenerateZKP</ref> struct </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1038" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="union_e_c_j_p_a_k_e___operation_1a728e6fd48622866c96a0cca65d9086c2" prot="public" static="no" mutable="no">
        <type><ref refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p" kindref="compound">ECJPAKE_OperationVerifyZKP</ref> *</type>
        <definition>ECJPAKE_OperationVerifyZKP* ECJPAKE_Operation::verifyZKP</definition>
        <argsstring></argsstring>
        <name>verifyZKP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an <ref refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p" kindref="compound">ECJPAKE_OperationVerifyZKP</ref> struct </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1039" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1039" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="union_e_c_j_p_a_k_e___operation_1ab867fa191e0c11a5efdc81804427cede" prot="public" static="no" mutable="no">
        <type><ref refid="struct_e_c_j_p_a_k_e___operation_round_two_generate_keys" kindref="compound">ECJPAKE_OperationRoundTwoGenerateKeys</ref> *</type>
        <definition>ECJPAKE_OperationRoundTwoGenerateKeys* ECJPAKE_Operation::generateRoundTwoKeys</definition>
        <argsstring></argsstring>
        <name>generateRoundTwoKeys</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an <ref refid="struct_e_c_j_p_a_k_e___operation_round_two_generate_keys" kindref="compound">ECJPAKE_OperationRoundTwoGenerateKeys</ref> struct </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1040" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1040" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="union_e_c_j_p_a_k_e___operation_1ad3a8ee59d8b6ee74a1016c9e44a49c6a" prot="public" static="no" mutable="no">
        <type><ref refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret" kindref="compound">ECJPAKE_OperationComputeSharedSecret</ref> *</type>
        <definition>ECJPAKE_OperationComputeSharedSecret* ECJPAKE_Operation::computeSharedSecret</definition>
        <argsstring></argsstring>
        <name>computeSharedSecret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A pointer to an <ref refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret" kindref="compound">ECJPAKE_OperationComputeSharedSecret</ref> struct </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1041" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1041" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Union containing pointers to all supported operation structs. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="366">
        <label>ECJPAKE_OperationVerifyZKP</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_verify_z_k_p"/>
        <childnode refid="367" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="369" relation="usage">
          <edgelabel>theirGenerator</edgelabel>
          <edgelabel>theirPublicKey</edgelabel>
          <edgelabel>theirPublicV</edgelabel>
        </childnode>
      </node>
      <node id="375">
        <label>ECJPAKE_OperationGenerateZKP</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_generate_z_k_p"/>
        <childnode refid="367" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="369" relation="usage">
          <edgelabel>myPrivateV</edgelabel>
          <edgelabel>myPrivateKey</edgelabel>
        </childnode>
      </node>
      <node id="373">
        <label>ECJPAKE_OperationRoundOneGenerateKeys</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_round_one_generate_keys"/>
        <childnode refid="367" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="369" relation="usage">
          <edgelabel>myPublicKey1</edgelabel>
          <edgelabel>myPublicKey2</edgelabel>
          <edgelabel>myPrivateKey1</edgelabel>
          <edgelabel>myPrivateKey2</edgelabel>
          <edgelabel>myPublicV1</edgelabel>
          <edgelabel>myPublicV2</edgelabel>
          <edgelabel>myPrivateV1</edgelabel>
          <edgelabel>myPrivateV2</edgelabel>
        </childnode>
      </node>
      <node id="376">
        <label>ECJPAKE_OperationComputeSharedSecret</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_compute_shared_secret"/>
        <childnode refid="367" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="369" relation="usage">
          <edgelabel>theirPublicKey2</edgelabel>
          <edgelabel>myPrivateKey2</edgelabel>
          <edgelabel>myCombinedPrivateKey</edgelabel>
          <edgelabel>sharedSecret</edgelabel>
          <edgelabel>theirCombinedPublicKey</edgelabel>
        </childnode>
      </node>
      <node id="369">
        <label>CryptoKey</label>
        <link refid="struct_crypto_key"/>
        <childnode refid="370" relation="usage">
          <edgelabel>plaintext</edgelabel>
        </childnode>
        <childnode refid="371" relation="usage">
          <edgelabel>keyStore</edgelabel>
        </childnode>
        <childnode refid="372" relation="usage">
          <edgelabel>keyBlob</edgelabel>
        </childnode>
      </node>
      <node id="367">
        <label>ECCParams_CurveParams</label>
        <link refid="struct_e_c_c_params___curve_params"/>
        <childnode refid="368" relation="usage">
          <edgelabel>g</edgelabel>
          <edgelabel>precomputed</edgelabel>
          <edgelabel>generator</edgelabel>
          <edgelabel>t</edgelabel>
        </childnode>
      </node>
      <node id="368">
        <label>ECCParams_ECCPoint</label>
        <link refid="struct_e_c_c_params___e_c_c_point"/>
      </node>
      <node id="370">
        <label>CryptoKey_Plaintext</label>
        <link refid="struct_crypto_key___plaintext"/>
      </node>
      <node id="372">
        <label>CryptoKey_KeyBlob</label>
        <link refid="struct_crypto_key___key_blob"/>
      </node>
      <node id="374">
        <label>ECJPAKE_OperationRoundTwoGenerateKeys</label>
        <link refid="struct_e_c_j_p_a_k_e___operation_round_two_generate_keys"/>
        <childnode refid="367" relation="usage">
          <edgelabel>curve</edgelabel>
        </childnode>
        <childnode refid="369" relation="usage">
          <edgelabel>myNewGenerator</edgelabel>
          <edgelabel>myPublicKey1</edgelabel>
          <edgelabel>theirPublicKey1</edgelabel>
          <edgelabel>myPublicKey2</edgelabel>
          <edgelabel>theirPublicKey2</edgelabel>
          <edgelabel>myPrivateV</edgelabel>
          <edgelabel>myCombinedPublicKey</edgelabel>
          <edgelabel>myCombinedPrivateKey</edgelabel>
          <edgelabel>myPrivateKey2</edgelabel>
          <edgelabel>theirNewGenerator</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="371">
        <label>CryptoKey_KeyStore</label>
        <link refid="struct_crypto_key___key_store"/>
      </node>
      <node id="365">
        <label>ECJPAKE_Operation</label>
        <link refid="union_e_c_j_p_a_k_e___operation"/>
        <childnode refid="366" relation="usage">
          <edgelabel>verifyZKP</edgelabel>
        </childnode>
        <childnode refid="373" relation="usage">
          <edgelabel>generateRoundOneKeys</edgelabel>
        </childnode>
        <childnode refid="374" relation="usage">
          <edgelabel>generateRoundTwoKeys</edgelabel>
        </childnode>
        <childnode refid="375" relation="usage">
          <edgelabel>generateZKP</edgelabel>
        </childnode>
        <childnode refid="376" relation="usage">
          <edgelabel>computeSharedSecret</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" line="1036" column="1" bodyfile="exports/tidrivers_cc13xx_cc26xx/source/ti/drivers/ECJPAKE.h" bodystart="1036" bodyend="1042"/>
    <listofallmembers>
      <member refid="union_e_c_j_p_a_k_e___operation_1ad3a8ee59d8b6ee74a1016c9e44a49c6a" prot="public" virt="non-virtual"><scope>ECJPAKE_Operation</scope><name>computeSharedSecret</name></member>
      <member refid="union_e_c_j_p_a_k_e___operation_1a6c46e845743811aae2037f8dd6876316" prot="public" virt="non-virtual"><scope>ECJPAKE_Operation</scope><name>generateRoundOneKeys</name></member>
      <member refid="union_e_c_j_p_a_k_e___operation_1ab867fa191e0c11a5efdc81804427cede" prot="public" virt="non-virtual"><scope>ECJPAKE_Operation</scope><name>generateRoundTwoKeys</name></member>
      <member refid="union_e_c_j_p_a_k_e___operation_1ac8503245dc8cf2a5987e2a73ee6550e6" prot="public" virt="non-virtual"><scope>ECJPAKE_Operation</scope><name>generateZKP</name></member>
      <member refid="union_e_c_j_p_a_k_e___operation_1a728e6fd48622866c96a0cca65d9086c2" prot="public" virt="non-virtual"><scope>ECJPAKE_Operation</scope><name>verifyZKP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
